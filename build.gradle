import org.openapitools.generator.gradle.plugin.tasks.GenerateTask

plugins {
	id 'java'
	id 'idea'
    id 'jacoco'
	id 'org.springframework.boot' version '3.2.5'
	id 'io.spring.dependency-management' version '1.1.4'
	id "org.openapi.generator" version "7.6.0"
}

sourceSets {
	main {
		java {
			srcDirs(
					"$rootDir/src/main/java",
					"$rootDir/build/generated/middle-service/src/main/java"
			)
		}
	}
}

idea {
	module {
		generatedSourceDirs.add(file("$rootDir/build/generated/middle-service/src/main/java"))
	}
}

jacoco {
    toolVersion = "0.8.12"
}

group = 'ru.gpbitfactory'
version = '0.3.0'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.telegram:telegrambots-longpolling:7.2.1'
	implementation 'org.telegram:telegrambots-client:7.2.1'
	implementation 'org.telegram:telegrambots-extensions:7.2.1'
	implementation 'org.springdoc:springdoc-openapi-ui:1.8.0'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	implementation 'io.github.openfeign:feign-okhttp:13.2.1'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:2023.0.1"
	}
}

test {
	useJUnitPlatform()
	testLogging {
		exceptionFormat = "full"
	}
}

jacocoTestReport {
	sourceDirectories.setFrom(
			"$projectDir/src/main/java/ru/gpbitfactory/minibank/telegrambot"
	)
	classDirectories.setFrom(
			"$projectDir/build/classes/java/main/ru/gpbitfactory/minibank/telegrambot"
	)
    reports {
        csv.required = true
    }
}

tasks.register("middleServiceOpenApi", GenerateTask) {
	generatorName.set("spring")
	inputSpec.set("$rootDir/src/main/resources/openapi/middle-service.yaml")
	outputDir.set("$rootDir/build/generated")
	skipOverwrite = true
	globalProperties.set([
			models         : "",
	])
	configOptions.set([
			modelPackage    : "ru.gpbitfactory.minibank.middle.dto",
			sourceFolder    : "middle-service/src/main/java",
			library         : "spring-cloud",
			dateLibrary     : "java8",
			openApiNullable : "false",
			generateBuilders: "true",
			useOptional     : "true",
			useSpringBoot3  : "true"
	])
}

project.tasks {
	compileJava {
		dependsOn('middleServiceOpenApi')
	}
}

processResources {
	exclude('*-dev.yml', 'openapi', 'project')
}